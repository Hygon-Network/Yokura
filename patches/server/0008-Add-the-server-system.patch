From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Hygon <hygon806@gmail.com>
Date: Sun, 10 Oct 2021 19:11:04 +0200
Subject: [PATCH] Add the server system


diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java
index cd918cec00d8202252af0d20b1a8891371c538e3..fa620f840c8a7e819a961bebc7bd9f23dd5012ac 100644
--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java
@@ -389,9 +389,11 @@ public class PaperConfig {
         autoRecipeLimit = getInt("settings.spam-limiter.recipe-spam-limit", autoRecipeLimit);
     }
 
-    public static boolean velocitySupport;
-    public static boolean velocityOnlineMode;
+    // Yokura start - We use velocity
+    public static boolean velocitySupport = true;
+    public static boolean velocityOnlineMode = true;
     public static byte[] velocitySecretKey;
+    /*
     private static void velocitySupport() {
         velocitySupport = getBoolean("settings.velocity-support.enabled", false);
         velocityOnlineMode = getBoolean("settings.velocity-support.online-mode", false);
@@ -402,6 +404,8 @@ public class PaperConfig {
             velocitySecretKey = secret.getBytes(StandardCharsets.UTF_8);
         }
     }
+     */
+    // Yokura end
 
     public static int maxBookPageSize = 2560;
     public static double maxBookTotalSizeMultiplier = 0.98D;
diff --git a/src/main/java/fr/hygon/yokura/YokuraAPIServer.java b/src/main/java/fr/hygon/yokura/YokuraAPIServer.java
index a4fcd77007532725ea1e60359d4830dc932d635c..06cf78cc6c19c22b1e12de3473f677f2139dc923 100644
--- a/src/main/java/fr/hygon/yokura/YokuraAPIServer.java
+++ b/src/main/java/fr/hygon/yokura/YokuraAPIServer.java
@@ -4,8 +4,9 @@ import com.mongodb.MongoClient;
 import com.mongodb.client.MongoDatabase;
 import fr.hygon.brokerapi.Broker;
 import fr.hygon.brokerapi.packets.Packet;
+import fr.hygon.brokerapi.packets.ServerStatusPacket;
 
-public record YokuraAPIServer(MongoClient mongoClient, MongoDatabase mongoDatabase, Broker broker) implements IYokuraAPI {
+public record YokuraAPIServer(MongoClient mongoClient, MongoDatabase mongoDatabase, String serverID, Broker broker) implements IYokuraAPI {
     @Override
     public MongoClient getMongoClient() {
         return mongoClient;
@@ -20,4 +21,16 @@ public record YokuraAPIServer(MongoClient mongoClient, MongoDatabase mongoDataba
     public void sendPacket(Packet packet) {
         broker.sendPacket(packet);
     }
+
+    @Override
+    public String getServerID() {
+        return serverID;
+    }
+
+    @Override
+    public void setStatus(ServerStatusPacket.Status status) {
+        if(getServerID() != null) {
+            sendPacket(new ServerStatusPacket(getServerID(), status));
+        }
+    }
 }
diff --git a/src/main/java/fr/hygon/yokura/broker/PacketListenerImpl.java b/src/main/java/fr/hygon/yokura/broker/PacketListenerImpl.java
index 70bd0a40c3d784f685cd5f32df3e124b05f75cea..53bcae4588dcd1a1310e05616b069f77983c48ca 100644
--- a/src/main/java/fr/hygon/yokura/broker/PacketListenerImpl.java
+++ b/src/main/java/fr/hygon/yokura/broker/PacketListenerImpl.java
@@ -1,5 +1,6 @@
 package fr.hygon.yokura.broker;
 
+import com.destroystokyo.paper.PaperConfig;
 import fr.hygon.brokerapi.packets.PacketListener;
 import fr.hygon.brokerapi.packets.ServerStatusPacket;
 import fr.hygon.brokerapi.packets.VelocityKeyUpdatePacket;
@@ -7,7 +8,7 @@ import fr.hygon.brokerapi.packets.VelocityKeyUpdatePacket;
 public class PacketListenerImpl implements PacketListener {
     @Override
     public void handleVelocityKeyUpdate(VelocityKeyUpdatePacket velocityKeyUpdatePacket) {
-
+        PaperConfig.velocitySecretKey = velocityKeyUpdatePacket.getVelocityKey();
     }
 
     @Override
diff --git a/src/main/java/fr/hygon/yokura/broker/packets/MessagePacket.java b/src/main/java/fr/hygon/yokura/broker/packets/MessagePacket.java
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index fd9d76acc58d753a22562270e2343df6f25e4a30..427b0164defcca969ab3c3c887d0d5cf9cc88aee 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -12,6 +12,8 @@ import com.mojang.authlib.GameProfile;
 import com.mojang.authlib.GameProfileRepository;
 import com.mojang.authlib.minecraft.MinecraftSessionService;
 import com.mojang.datafixers.DataFixer;
+import fr.hygon.brokerapi.packets.ServerStatusPacket; // Yokura
+import fr.hygon.yokura.YokuraAPI; // Yokura
 import io.papermc.paper.adventure.PaperAdventure; // Paper
 import it.unimi.dsi.fastutil.longs.LongIterator;
 import java.awt.image.BufferedImage;
@@ -1030,6 +1032,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
         // Paper end
         // CraftBukkit end
         MinecraftServer.LOGGER.info("Stopping server");
+        YokuraAPI.setStatus(ServerStatusPacket.Status.STOPPING); // Yokura
         MinecraftTimings.stopServer(); // Paper
         // CraftBukkit start
         if (this.server != null) {
@@ -1216,6 +1219,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
                 String doneTime = String.format(java.util.Locale.ROOT, "%.3fs", (double) (Util.getNanos() - serverStartTime) / 1.0E9D);
                 LOGGER.info("Done ({})! For help, type \"help\"", doneTime);
                 // Paper end
+                YokuraAPI.setStatus(ServerStatusPacket.Status.WAITING_PLAYERS); // Yokura
 
                 org.spigotmc.WatchdogThread.tick(); // Paper
                 org.spigotmc.WatchdogThread.hasStarted = true; // Paper
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index 04ab2817f2ff1a8dd406d4008402041766fd272a..8da2ef6dd59e6a196ae594451cb7c2dca251c156 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -264,7 +264,8 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
             DedicatedServer.LOGGER.error("Couldn't connect to the broker.", exception);
             return false;
         }
-        fr.hygon.yokura.YokuraAPI.setInstance(new fr.hygon.yokura.YokuraAPIServer(mongoClient, mongoDatabase, broker));
+
+        fr.hygon.yokura.YokuraAPI.setInstance(new fr.hygon.yokura.YokuraAPIServer(mongoClient, mongoDatabase, (String) options.valueOf("network-server-name"), broker));
         // Yokura end
 
         this.setPvpAllowed(dedicatedserverproperties.pvp);
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
index f944e6beafc7876ed9c6923a22f58d82967b77cb..9d7d01553f7cc47c5eb6071bd286ec39857459ba 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
@@ -15,7 +15,7 @@ import net.minecraft.world.level.levelgen.WorldGenSettings;
 public class DedicatedServerProperties extends Settings<DedicatedServerProperties> {
 
     public final boolean debug = this.get("debug", false); // CraftBukkit
-    public final boolean onlineMode = this.get("online-mode", true);
+    public final boolean onlineMode = this.get("online-mode", false); // Yokura - We use Velocity
     public final boolean preventProxyConnections = this.get("prevent-proxy-connections", false);
     public final String serverIp = this.get("server-ip", "");
     public final boolean spawnAnimals = this.get("spawn-animals", true);
diff --git a/src/main/java/org/bukkit/craftbukkit/Main.java b/src/main/java/org/bukkit/craftbukkit/Main.java
index 55eae4684069ea27bd1763ea93b85f8fb6d2fb8c..99451a04282139f16ed25189b0dd0fb49f30cdc7 100644
--- a/src/main/java/org/bukkit/craftbukkit/Main.java
+++ b/src/main/java/org/bukkit/craftbukkit/Main.java
@@ -166,6 +166,10 @@ public class Main {
                         .ofType(File.class)
                         .defaultsTo(new File(org.apache.commons.io.FileUtils.getUserDirectory() + File.separator + "HygonNetwork" + File.separator + "yokura-global.yml"))
                         .describedAs("YML File");
+                accepts("network-server-name")
+                        .withRequiredArg()
+                        .ofType(String.class)
+                        .describedAs("Network's server name.");
                 // Yokura end
             }
         };
