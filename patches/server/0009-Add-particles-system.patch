From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Hygon <hygon806@gmail.com>
Date: Sat, 11 Dec 2021 20:11:54 +0100
Subject: [PATCH] Add particles system


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 79c38e0931726ac9f6607faf1fecb9b0f7911900..b11066b9b75eb89d7eb35ea308b671e0311b5186 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -15,6 +15,7 @@ import java.util.OptionalInt;
 import java.util.Random;
 import java.util.UUID;
 import javax.annotation.Nullable;
+import fr.hygon.yokura.entity.player.ParticleList; // Yokura
 import fr.hygon.yokura.entity.player.Ranks; // Yokura
 import net.minecraft.BlockUtil;
 import net.minecraft.ChatFormatting;
@@ -269,6 +270,9 @@ public class ServerPlayer extends Player {
     public int networkLevel;
 
     public ArrayList<Ranks> ranks;
+
+    public ParticleList particle;
+    public ArrayList<ParticleList> boughtParticles;
     // Yokura end
 
     public ServerPlayer(MinecraftServer server, ServerLevel world, GameProfile profile, ServerLoginPacketListenerImpl loginPacketListener) { // Yokura - add loginPacketListener
@@ -351,6 +355,9 @@ public class ServerPlayer extends Player {
         networkLevel = loginPacketListener.networkLevel;
 
         ranks = loginPacketListener.ranks;
+
+        particle = loginPacketListener.particle;
+        boughtParticles = loginPacketListener.boughtParticles;
         // Yokura end
     }
     // Paper start - Chunk priority
@@ -765,6 +772,11 @@ public class ServerPlayer extends Player {
                 this.oldLevel = this.experienceLevel;
             }
             // CraftBukkit end
+            // Yokura start
+            if (this.tickCount % 5 == 0) { // Every 5 ticks
+                particle.getParticle().spawnParticle(getBukkitEntity());
+            }
+            // Yokura end
         } catch (Throwable throwable) {
             CrashReport crashreport = CrashReport.forThrowable(throwable, "Ticking player");
             CrashReportCategory crashreportsystemdetails = crashreport.addCategory("Player being ticked");
diff --git a/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
index 51246dea66e11a50eaacb434445821b80cb13174..759c109f68c95abf7b23fe8690527c85e1e656bc 100644
--- a/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
@@ -20,6 +20,7 @@ import javax.crypto.Cipher;
 import javax.crypto.SecretKey;
 import fr.hygon.yokura.YokuraAPI; // Yokura
 import fr.hygon.yokura.config.YokuraGlobalConfig; // Yokura
+import fr.hygon.yokura.entity.player.ParticleList; // Yokura
 import fr.hygon.yokura.entity.player.Ranks; // Yokura
 import net.minecraft.DefaultUncaughtExceptionHandler;
 import net.minecraft.network.Connection;
@@ -81,6 +82,9 @@ public class ServerLoginPacketListenerImpl implements ServerLoginPacketListener
     public int networkLevel;
 
     public ArrayList<Ranks> ranks = new ArrayList<>();
+
+    public ParticleList particle;
+    public ArrayList<ParticleList> boughtParticles;
     // Yokura end
 
     public ServerLoginPacketListenerImpl(MinecraftServer server, Connection connection) {
@@ -484,13 +488,17 @@ public class ServerLoginPacketListenerImpl implements ServerLoginPacketListener
                     .append("tokens", YokuraGlobalConfig.defaultTokens)
                     .append("xp", 0)
                     .append("level", 0)
-                    .append("ranks", new ArrayList<>(Collections.singletonList(Ranks.PLAYER.getPower())));
+                    .append("ranks", new ArrayList<>(Collections.singletonList(Ranks.PLAYER.getPower())))
+                    .append("particle", ParticleList.NONE.toString())
+                    .append("bought_particles", new ArrayList<String>());
 
             coins = YokuraGlobalConfig.defaultCoins;
             tokens = YokuraGlobalConfig.defaultTokens;
             networkXP = 0;
             networkLevel = 0;
             ranks = new ArrayList<>(Collections.singletonList(Ranks.PLAYER));
+            particle = ParticleList.NONE;
+            boughtParticles = new ArrayList<>();
 
             YokuraAPI.getMongoDatabase().getCollection("players").insertOne(playerData);
 
@@ -501,6 +509,10 @@ public class ServerLoginPacketListenerImpl implements ServerLoginPacketListener
             networkXP = playerData.getInteger("xp");
             networkLevel = playerData.getInteger("level");
             playerData.getList("ranks", Integer.class).forEach(power -> ranks.add(Ranks.getRankFromPower(power)));
+            particle = ParticleList.valueOf(playerData.getString("particle"));
+
+            boughtParticles = new ArrayList<>();
+            playerData.getList("bought_particles", String.class).forEach(boughtParticlesList -> boughtParticles.add(ParticleList.valueOf(boughtParticlesList)));
         }
     }
     // Yokura end
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 443f1ab4ad065893f97adef0aeb0da5d70a6d934..87dcbb4fce2fdcd648da96499b5cf55e7ebe8607 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -7,6 +7,7 @@ import com.google.common.io.BaseEncoding;
 import com.mojang.authlib.GameProfile;
 import com.mojang.datafixers.util.Pair;
 import fr.hygon.yokura.MongoUtils;
+import fr.hygon.yokura.entity.player.ParticleList; // Yokura
 import fr.hygon.yokura.entity.player.Ranks; // Yokura
 import io.netty.buffer.Unpooled;
 import java.io.ByteArrayOutputStream;
@@ -280,6 +281,38 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         getHandle().ranks.remove(rank);
         MongoUtils.removeFromArrayAsync("players", getUniqueId().toString(), "ranks", rank.getPower());
     }
+
+    @Override
+    public @NotNull ParticleList getParticle() {
+        return getHandle().particle;
+    }
+
+    @Override
+    public void buyParticle(@NotNull ParticleList particle) {
+        getHandle().boughtParticles.add(particle);
+        removeCoins(particle.getPrice());
+        MongoUtils.addToArray("players", getUniqueId().toString(), "bought_particles", particle.toString());
+    }
+
+    @Override
+    public void setParticle(@NotNull ParticleList particle) {
+        if(particle == null) {
+            particle = ParticleList.NONE;
+        }
+
+        getHandle().particle = particle;
+        MongoUtils.updateValueAsync("players", getUniqueId().toString(), "particle", particle.toString());
+    }
+
+    @Override
+    public boolean hasBoughtParticle(@NotNull ParticleList particle) {
+        return getHandle().boughtParticles.contains(particle);
+    }
+
+    @Override
+    public @NotNull List<ParticleList> getBoughtParticles() {
+        return getHandle().boughtParticles;
+    }
     // Yokura end
 
     public GameProfile getProfile() {
