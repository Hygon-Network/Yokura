From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Hygon <hygon806@gmail.com>
Date: Sun, 19 Sep 2021 17:12:25 +0200
Subject: [PATCH] Add network levels and xp


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 79d9309490450fc4e6dce039cf48a13b7b082957..fb6db113fcaae9399d401bb15a1ac25f096649f5 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -262,6 +262,9 @@ public class ServerPlayer extends Player {
     // Yokura start
     public double coins;
     public double tokens;
+
+    public int networkXP;
+    public int networkLevel;
     // Yokura end
 
     public ServerPlayer(MinecraftServer server, ServerLevel world, GameProfile profile, ServerLoginPacketListenerImpl loginPacketListener) { // Yokura - add loginPacketListener
@@ -339,6 +342,9 @@ public class ServerPlayer extends Player {
         // Yokura start
         coins = loginPacketListener.coins;
         tokens = loginPacketListener.tokens;
+
+        networkXP = loginPacketListener.networkXP;
+        networkLevel = loginPacketListener.networkLevel;
         // Yokura end
     }
     // Paper start - Chunk priority
diff --git a/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
index 1a015e5638cc8ae34ee31ab28226302a2ebe4566..3d31810317f80877dd4be3c1688caad0e9356006 100644
--- a/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
@@ -73,6 +73,9 @@ public class ServerLoginPacketListenerImpl implements ServerLoginPacketListener
     // Yokura start
     public double coins;
     public double tokens;
+
+    public int networkXP;
+    public int networkLevel;
     // Yokura end
 
     public ServerLoginPacketListenerImpl(MinecraftServer server, Connection connection) {
@@ -473,10 +476,14 @@ public class ServerLoginPacketListenerImpl implements ServerLoginPacketListener
 
             playerData = new Document("_id", playerUUID.toString())
                     .append("coins", YokuraGlobalConfig.defaultCoins)
-                    .append("tokens", YokuraGlobalConfig.defaultTokens);
+                    .append("tokens", YokuraGlobalConfig.defaultTokens)
+                    .append("xp", 0)
+                    .append("level", 0);
 
             coins = YokuraGlobalConfig.defaultCoins;
             tokens = YokuraGlobalConfig.defaultTokens;
+            networkXP = 0;
+            networkLevel = 0;
 
             YokuraAPI.getMongoDatabase().getCollection("players").insertOne(playerData);
 
@@ -484,6 +491,8 @@ public class ServerLoginPacketListenerImpl implements ServerLoginPacketListener
         } else {
             coins = playerData.getDouble("coins");
             tokens = playerData.getDouble("tokens");
+            networkXP = playerData.getInteger("xp");
+            networkLevel = playerData.getInteger("level");
         }
     }
     // Yokura end
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java b/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
index 9796e52613fdb2205bf1ff02c0256ad47f5c0e21..b9ffeabda777cec90489e1c8a2f39df74663c3ab 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
@@ -88,6 +88,38 @@ public class CraftOfflinePlayer implements OfflinePlayer, ConfigurationSerializa
     public boolean hasEnoughTokens(double tokens) {
         return getTokens() >= tokens;
     }
+
+    @Override
+    public int getNetworkXp() {
+        return MongoUtils.getInt("players", getUniqueId().toString(), "xp");
+    }
+
+    @Override
+    public int getNetworkLevel() {
+        return MongoUtils.getInt("players", getUniqueId().toString(), "level");
+    }
+
+    @Override
+    public void addNetworkXp(int xp) {
+        if(xp <= 0) return;
+        java.util.concurrent.CompletableFuture.runAsync(() -> {
+           int networkXp = getNetworkXp();
+           int networkLevel = getNetworkLevel();
+
+           int newXp = networkXp + xp;
+           if(newXp >= 250) {
+               while (newXp >= 250) {
+                   newXp = newXp - 250;
+                   networkLevel++;
+               }
+
+               new fr.hygon.yokura.event.player.NetworkLevelChangeEvent(this, networkLevel, newXp).callEvent();
+               MongoUtils.updateValue("players", getUniqueId().toString(), "level", networkLevel);
+           }
+
+           MongoUtils.updateValue("players", getUniqueId().toString(), "xp", newXp);
+        });
+    }
     // Yokura end
 
     public GameProfile getProfile() {
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index de9259c4488f7bdd4d041425ec12b02ee2e4b633..eead33c7acaf1342885eb0102cbc2c64a7fa0baf 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -226,7 +226,37 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     public boolean hasEnoughTokens(double tokens) {
         return getTokens() >= tokens;
     }
+
+    @Override
+    public int getNetworkXp() {
+        return getHandle().networkXP;
+    }
+
+    @Override
+    public int getNetworkLevel() {
+        return getHandle().networkLevel;
+    }
+
+    @Override
+    public void addNetworkXp(int xp) {
+        if(xp <= 0) return;
+        int networkLevel = getNetworkLevel();
+
+        int newXp = getNetworkXp() + xp;
+        if(newXp >= 250) {
+            while (newXp >= 250) {
+                newXp = newXp - 250;
+                networkLevel++;
+            }
+
+            new fr.hygon.yokura.event.player.NetworkLevelChangeEvent(this, networkLevel, newXp).callEvent();
+            MongoUtils.updateValueAsync("players", getUniqueId().toString(), "level", networkLevel);
+        }
+
+        MongoUtils.updateValueAsync("players", getUniqueId().toString(), "xp", newXp);
+    }
     // Yokura end
+
     public GameProfile getProfile() {
         return this.getHandle().getGameProfile();
     }
