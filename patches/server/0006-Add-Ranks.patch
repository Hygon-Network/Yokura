From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Hygon <hygon806@gmail.com>
Date: Sun, 19 Sep 2021 18:45:55 +0200
Subject: [PATCH] Add Ranks


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index fb6db113fcaae9399d401bb15a1ac25f096649f5..79c38e0931726ac9f6607faf1fecb9b0f7911900 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -5,6 +5,7 @@ import com.google.common.collect.Lists;
 import com.mojang.authlib.GameProfile;
 import com.mojang.datafixers.util.Either;
 import com.mojang.serialization.DataResult;
+import java.util.ArrayList; // Yokura
 import java.util.Collection;
 import java.util.Iterator;
 import java.util.List;
@@ -14,6 +15,7 @@ import java.util.OptionalInt;
 import java.util.Random;
 import java.util.UUID;
 import javax.annotation.Nullable;
+import fr.hygon.yokura.entity.player.Ranks; // Yokura
 import net.minecraft.BlockUtil;
 import net.minecraft.ChatFormatting;
 import net.minecraft.CrashReport;
@@ -265,6 +267,8 @@ public class ServerPlayer extends Player {
 
     public int networkXP;
     public int networkLevel;
+
+    public ArrayList<Ranks> ranks;
     // Yokura end
 
     public ServerPlayer(MinecraftServer server, ServerLevel world, GameProfile profile, ServerLoginPacketListenerImpl loginPacketListener) { // Yokura - add loginPacketListener
@@ -345,6 +349,8 @@ public class ServerPlayer extends Player {
 
         networkXP = loginPacketListener.networkXP;
         networkLevel = loginPacketListener.networkLevel;
+
+        ranks = loginPacketListener.ranks;
         // Yokura end
     }
     // Paper start - Chunk priority
diff --git a/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
index 3d31810317f80877dd4be3c1688caad0e9356006..51246dea66e11a50eaacb434445821b80cb13174 100644
--- a/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
@@ -9,7 +9,9 @@ import java.net.InetAddress;
 import java.net.InetSocketAddress;
 import java.net.SocketAddress;
 import java.security.PrivateKey;
+import java.util.ArrayList; // Yokura
 import java.util.Arrays;
+import java.util.Collections; // Yokura
 import java.util.Random;
 import java.util.UUID;
 import java.util.concurrent.atomic.AtomicInteger;
@@ -18,6 +20,7 @@ import javax.crypto.Cipher;
 import javax.crypto.SecretKey;
 import fr.hygon.yokura.YokuraAPI; // Yokura
 import fr.hygon.yokura.config.YokuraGlobalConfig; // Yokura
+import fr.hygon.yokura.entity.player.Ranks; // Yokura
 import net.minecraft.DefaultUncaughtExceptionHandler;
 import net.minecraft.network.Connection;
 import net.minecraft.network.FriendlyByteBuf;
@@ -76,6 +79,8 @@ public class ServerLoginPacketListenerImpl implements ServerLoginPacketListener
 
     public int networkXP;
     public int networkLevel;
+
+    public ArrayList<Ranks> ranks = new ArrayList<>();
     // Yokura end
 
     public ServerLoginPacketListenerImpl(MinecraftServer server, Connection connection) {
@@ -478,12 +483,14 @@ public class ServerLoginPacketListenerImpl implements ServerLoginPacketListener
                     .append("coins", YokuraGlobalConfig.defaultCoins)
                     .append("tokens", YokuraGlobalConfig.defaultTokens)
                     .append("xp", 0)
-                    .append("level", 0);
+                    .append("level", 0)
+                    .append("ranks", new ArrayList<>(Collections.singletonList(Ranks.PLAYER.getPower())));
 
             coins = YokuraGlobalConfig.defaultCoins;
             tokens = YokuraGlobalConfig.defaultTokens;
             networkXP = 0;
             networkLevel = 0;
+            ranks = new ArrayList<>(Collections.singletonList(Ranks.PLAYER));
 
             YokuraAPI.getMongoDatabase().getCollection("players").insertOne(playerData);
 
@@ -493,6 +500,7 @@ public class ServerLoginPacketListenerImpl implements ServerLoginPacketListener
             tokens = playerData.getDouble("tokens");
             networkXP = playerData.getInteger("xp");
             networkLevel = playerData.getInteger("level");
+            playerData.getList("ranks", Integer.class).forEach(power -> ranks.add(Ranks.getRankFromPower(power)));
         }
     }
     // Yokura end
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java b/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
index b9ffeabda777cec90489e1c8a2f39df74663c3ab..72c7810575d264d12ffd1cd05faf34e1259af6fe 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
@@ -2,11 +2,16 @@ package org.bukkit.craftbukkit;
 
 import com.mojang.authlib.GameProfile;
 import java.io.File;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.UUID;
+import java.util.stream.Collectors;  // Yokura
 import fr.hygon.yokura.MongoUtils; // Yokura
+import fr.hygon.yokura.entity.player.Ranks; // Yokura
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.server.players.UserWhiteListEntry;
 import net.minecraft.stats.ServerStatsCounter;
@@ -120,6 +125,27 @@ public class CraftOfflinePlayer implements OfflinePlayer, ConfigurationSerializa
            MongoUtils.updateValue("players", getUniqueId().toString(), "xp", newXp);
         });
     }
+
+    @Override
+    public List<Ranks> getAllRanks() {
+        List<Integer> playerRanksPower = MongoUtils.getIntList("players", getUniqueId().toString(), "ranks");
+        return playerRanksPower.stream().mapToInt(rankPower -> rankPower).mapToObj(Ranks::getRankFromPower).collect(Collectors.toCollection(ArrayList::new));
+    }
+
+    @Override
+    public Ranks getRank() {
+        return Ranks.getRankFromPower(Collections.min((Collection<? extends Integer>) getAllRanks().stream().map(Ranks::getPower).collect(Collectors.toCollection(ArrayList::new))));
+    }
+
+    @Override
+    public void addRank(Ranks rank) {
+        MongoUtils.addToArrayAsync("players", getUniqueId().toString(), "ranks", rank.getPower());
+    }
+
+    @Override
+    public void removeRank(Ranks rank) {
+        MongoUtils.removeFromArrayAsync("players", getUniqueId().toString(), "ranks", rank.getPower());
+    }
     // Yokura end
 
     public GameProfile getProfile() {
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index eead33c7acaf1342885eb0102cbc2c64a7fa0baf..443f1ab4ad065893f97adef0aeb0da5d70a6d934 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -7,6 +7,7 @@ import com.google.common.io.BaseEncoding;
 import com.mojang.authlib.GameProfile;
 import com.mojang.datafixers.util.Pair;
 import fr.hygon.yokura.MongoUtils;
+import fr.hygon.yokura.entity.player.Ranks; // Yokura
 import io.netty.buffer.Unpooled;
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
@@ -16,6 +17,7 @@ import java.net.SocketAddress;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collection;
+import java.util.Collections; // Yokura
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.LinkedHashMap;
@@ -27,6 +29,7 @@ import java.util.UUID;
 import java.util.WeakHashMap;
 import java.util.logging.Level;
 import java.util.logging.Logger;
+import java.util.stream.Collectors; // Yokura
 import javax.annotation.Nullable;
 import net.minecraft.Util;
 import net.minecraft.advancements.AdvancementProgress;
@@ -255,6 +258,28 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
 
         MongoUtils.updateValueAsync("players", getUniqueId().toString(), "xp", newXp);
     }
+
+    @Override
+    public List<Ranks> getAllRanks() {
+        return getHandle().ranks;
+    }
+
+    @Override
+    public Ranks getRank() {
+        return Ranks.getRankFromPower(Collections.min((Collection<? extends Integer>) getAllRanks().stream().map(Ranks::getPower).collect(Collectors.toCollection(ArrayList::new))));
+    }
+
+    @Override
+    public void addRank(Ranks rank) {
+        getHandle().ranks.add(rank);
+        MongoUtils.addToArrayAsync("players", getUniqueId().toString(), "ranks", rank.getPower());
+    }
+
+    @Override
+    public void removeRank(Ranks rank) {
+        getHandle().ranks.remove(rank);
+        MongoUtils.removeFromArrayAsync("players", getUniqueId().toString(), "ranks", rank.getPower());
+    }
     // Yokura end
 
     public GameProfile getProfile() {
