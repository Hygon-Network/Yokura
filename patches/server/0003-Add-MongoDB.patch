From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Hygon <hygon806@gmail.com>
Date: Sun, 19 Sep 2021 13:11:24 +0200
Subject: [PATCH] Add MongoDB


diff --git a/src/main/java/fr/hygon/yokura/YokuraAPIServer.java b/src/main/java/fr/hygon/yokura/YokuraAPIServer.java
new file mode 100644
index 0000000000000000000000000000000000000000..6e403a6d5f7990478c5bc372b75a68398bf8eee3
--- /dev/null
+++ b/src/main/java/fr/hygon/yokura/YokuraAPIServer.java
@@ -0,0 +1,24 @@
+package fr.hygon.yokura;
+
+import com.mongodb.MongoClient;
+import com.mongodb.client.MongoDatabase;
+
+public class YokuraAPIServer implements IYokuraAPI {
+    private final MongoClient mongoClient;
+    private final MongoDatabase mongoDatabase;
+
+    public YokuraAPIServer(MongoClient mongoClient, MongoDatabase mongoDatabase) {
+        this.mongoClient = mongoClient;
+        this.mongoDatabase = mongoDatabase;
+    }
+
+    @Override
+    public MongoClient getMongoClient() {
+        return mongoClient;
+    }
+
+    @Override
+    public MongoDatabase getMongoDatabase() {
+        return mongoDatabase;
+    }
+}
diff --git a/src/main/java/fr/hygon/yokura/config/YokuraGlobalConfig.java b/src/main/java/fr/hygon/yokura/config/YokuraGlobalConfig.java
index cd6d278912dcbe310665072d2f70a21626f98f87..fa0e2957dac84215addae1172724f1b232534da1 100644
--- a/src/main/java/fr/hygon/yokura/config/YokuraGlobalConfig.java
+++ b/src/main/java/fr/hygon/yokura/config/YokuraGlobalConfig.java
@@ -87,4 +87,29 @@ public class YokuraGlobalConfig {
         config.addDefault(path, def);
         return config.getString(path, config.getString(path));
     }
+
+    public static String mongoHost = "localhost";
+    private static void getMongoHost() {
+        mongoHost = getString("credentials.mongodb.host", mongoHost);
+    }
+
+    public static int mongoPort = 27017;
+    private static void getMongoPort() {
+        mongoPort = getInt("credentials.mongodb.port", mongoPort);
+    }
+
+    public static String mongoUser = "Hygon";
+    private static void getMongoUser() {
+        mongoUser = getString("credentials.mongodb.user", mongoUser);
+    }
+
+    public static String mongoDatabase = "Hygon";
+    private static void getMongoDatabase() {
+        mongoDatabase = getString("credentials.mongodb.database", mongoDatabase);
+    }
+
+    public static char[] mongoPassword = new char[]{};
+    private static void getMongoPassword() {
+        mongoPassword = getString("credentials.mongodb.password", "").toCharArray();
+    }
 }
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index 739e5a71410f5e82a1d3085dc80812d62a602a73..056972869403c41b80a56f57fbc802a1f78853b6 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -21,6 +21,7 @@ import java.util.Locale;
 import java.util.function.BooleanSupplier;
 import java.util.regex.Pattern;
 import javax.annotation.Nullable;
+import fr.hygon.yokura.config.YokuraGlobalConfig; // Yokura
 import net.minecraft.DefaultUncaughtExceptionHandler;
 import net.minecraft.DefaultUncaughtExceptionHandlerWithName;
 import net.minecraft.SharedConstants;
@@ -235,11 +236,25 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
 
         // Yokura start
         try {
-            fr.hygon.yokura.config.YokuraGlobalConfig.init((java.io.File) options.valueOf("yokura-global-settings"));
+            YokuraGlobalConfig.init((java.io.File) options.valueOf("yokura-global-settings"));
         } catch (Exception exception) {
             DedicatedServer.LOGGER.error("Couldn't load yokura configuration.", exception);
             return false;
         }
+
+        com.mongodb.MongoCredential mongoCredential = com.mongodb.MongoCredential.createCredential(YokuraGlobalConfig.mongoUser, YokuraGlobalConfig.mongoDatabase, YokuraGlobalConfig.mongoPassword);
+        com.mongodb.MongoClient mongoClient = new com.mongodb.MongoClient(new com.mongodb.ServerAddress(YokuraGlobalConfig.mongoHost, YokuraGlobalConfig.mongoPort), mongoCredential, com.mongodb.MongoClientOptions.builder().build());
+        com.mongodb.client.MongoDatabase mongoDatabase = mongoClient.getDatabase(YokuraGlobalConfig.mongoDatabase);
+
+        try {
+            mongoClient.getDatabase("admin").runCommand(new org.bson.Document("ping", 1));
+            DedicatedServer.LOGGER.info("Connected to the MongoDB server.");
+        } catch (Exception exception) {
+            DedicatedServer.LOGGER.error("Couldn't connect to the MongoDB server.", exception);
+            return false;
+        }
+
+        fr.hygon.yokura.YokuraAPI.setInstance(new fr.hygon.yokura.YokuraAPIServer(mongoClient, mongoDatabase));
         // Yokura end
 
         this.setPvpAllowed(dedicatedserverproperties.pvp);
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 042be2cf60a9d01698808d84f2e537a5eb952079..3dfe850e90f2ec49266266dce24346d51e230e5a 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -728,7 +728,7 @@ public abstract class PlayerList {
         // depending on the outcome.
         SocketAddress socketaddress = loginlistener.connection.getRemoteAddress();
 
-        ServerPlayer entity = new ServerPlayer(this.server, this.server.getLevel(Level.OVERWORLD), gameprofile);
+        ServerPlayer entity = new ServerPlayer(this.server, this.server.getLevel(Level.OVERWORLD), gameprofile, loginlistener); // Yokura
         Player player = entity.getBukkitEntity();
         PlayerLoginEvent event = new PlayerLoginEvent(player, hostname, ((java.net.InetSocketAddress) socketaddress).getAddress(), ((java.net.InetSocketAddress) loginlistener.connection.getRawAddress()).getAddress());
 
diff --git a/src/main/resources/log4j2.xml b/src/main/resources/log4j2.xml
index 74ccc67e3c12dc5182602fb691ef3ddeb5b53280..f3b93fb9d5f602aefa761cf477b56e0c8828ef1b 100644
--- a/src/main/resources/log4j2.xml
+++ b/src/main/resources/log4j2.xml
@@ -50,5 +50,6 @@
             </filters>
             <AppenderRef ref="Async"/>
         </Root>
+        <Logger name="org.mongodb.driver" level="off" additivity="true" />
     </Loggers>
 </Configuration>
